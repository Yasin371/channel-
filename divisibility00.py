from big_ol_pile_of_manim_imports import *
class Intro(Scene):
    def construct(self):
        trianglea = Polygon(
            np.array([.5,.87,0]),
            np.array([1,0,0]),
            np.array([0,0,0]),
            fill_opacity = 0.75
        )
        linea1=Line([.5,.87,0],[0,0,0])
        linea11=Line([.5,.87,0],[0.25,0.43,0])
        linea12=Line([0,0,0],[0.25,0.43,0])
        lineb1= Line([0.19,1.4,0],[-0.62,0,0])
        lineb1a = Line([0.19, 1.4, 0], [-0.62, 0, 0],stroke_width=6.5)
        lineb2= Line([0.19,1.4,0],[.5,.87,0])
        lineb2a = Line([0.19, 1.4, 0], [.5, .87, 0],stroke_width=6.5)
        lineb3=Line([-0.62,0,0],[0,0,0])
        linec11=Line([0.9,1.57,0],[0.65,1.13,0])
        linec11a = Line([0.9, 1.57, 0], [.5,.87,0],stroke_width=6.5)
        linec12=Line([-0.4,-0.7,0],[-0.15,-0.27,0])
        linec13=Line([0.65,1.13,0],[-0.15,-0.27,0])
        linec2=Line([0.9,1.57,0],[2.21,-0.7,0])
        linec2a = Line([0.9, 1.57, 0], [2.21, -0.7, 0],stroke_width=6.5)
        linec3=Line([-0.4,-0.7,0],[2.21,-0.7,0])
        one=TexMobject("1")
        phi=TexMobject("\\phi")
        phisqr = TexMobject("\\phi^2")
        one.scale(0.5)
        one.move_to(trianglea, RIGHT*0.000001)
        phi.move_to(lineb1,LEFT*0.000001)
        phi.scale(0.5)
        phisqr.next_to(linec3, BOTTOM*0.0001)
        phisqr.scale(0.5)
        figure= VGroup(trianglea,one,linea1,lineb1,phi,lineb2,lineb3,linea11,linec11,linea12,linec12,lineb1,linec13,linec3,linec2,phisqr)
        m=VGroup(lineb1a, lineb2a,linec11a,linec2a)
        m.set_color(YELLOW)
        fm=VGroup(figure,m)
        fm.move_to(LEFT*.008+UP*0.7)
        fm.scale(1.9)
        title = TextMobject("Mathematical Problem Solve with Apprach")
        title.next_to(fm, BOTTOM * 0.5)
        title.scale(1.2)
        self.play(DrawBorderThenFill(trianglea), Write(one))
        self.play(Transform(linea1,lineb1),Write(phi))
        self.play(ShowCreation(lineb2),ShowCreation(lineb3))
        self.play(Transform(linea11,linec11),Transform(linea12,linec12),Transform(lineb1,linec13))
        self.play(ShowCreation(linec3),ShowCreation(linec2),Write(phisqr))
        self.play(FadeIn(m), Write(title))
        self.wait()
        self.play(FadeOutAndShift(figure),FadeOutAndShift(m), FadeOutAndShift(title))
class symbole(Scene):
    def construct(self):
        d_title=TextMobject("Divisibility")
        d_title.set_color(DARK_BLUE)
        d_title.move_to(TOP*.8)
        d_title.scale(1.2)
        example1=TexMobject("\\frac{a}{b}= z \\in \\mathbb{Z}","\\frac{a}{b}= z \\notin \\mathbb{Z}", "\\frac{15}{3}=5", "\\frac{15}{7}=2.1428 \\dots")
        example2=TexMobject("b|a","b \\nmid a", "3|15","7 \\nmid 15")
        example1.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        example2.arrange(BOTTOM, buff=SMALL_BUFF*2.3, aligned_edge=LEFT)
        example=VGroup(example1, example2)
        example.arrange(RIGHT, buff=LARGE_BUFF*5)
        example.next_to(d_title, BOTTOM)
        arrow1=Arrow(example1[0].get_right(),example2[0].get_left())
        arrow2=Arrow(example1[1].get_right(),example2[1].get_left())
        arrow3=Arrow(example1[2].get_right(),example2[2].get_left())
        arrow4=Arrow(example1[3].get_right(),example2[3].get_left())
        self.play(Write(d_title))
        self.play(Write(example1[0]))
        self.wait(2)
        self.play(ShowCreationThenDestruction(arrow1), Write(example2[0]))
        self.play(Write(example1[1]))
        self.wait(2)
        self.play(ShowCreationThenDestruction(arrow2), Write(example2[1]))
        self.play(Write(example1[2]))
        self.wait(2)
        self.play(ShowCreationThenDestruction(arrow3), Write(example2[2]))
        self.wait(2)
        self.play(Write(example1[3]))
        self.wait(2)
        self.play(ShowCreationThenDestruction(arrow4), Write(example2[3]))
        self.wait(2)
class propaties(Scene):
    def construct(self):
        properties=TextMobject("Properties")
        properties.set_color(DARK_BLUE)
        properties.move_to(TOP*.8)
        properties_list1=TexMobject("1) \\ x \\mid x")
        properties_list2=TexMobject("2) \\ \\textrm{If}\\ x \\mid y \\","\\textrm{and}\\","y\\mid z \\","\\textrm{then}\\","x \\mid z")
        properties_list3=TexMobject("3) \\ \\textrm{If}\\ x \\mid  y \\","\\textrm{and}\\","y \\neq 0 \\","\\textrm{then}\\","|x| \\leq |y|")
        properties_list4=TexMobject("4) \\ \\textrm{If}\\ x \\mid y \\","\\textrm{and}\\","x \\mid z \\","\\textrm{then}\\",
                                    "x \\mid \\alpha y + \\beta z \\","\\textrm{where}\\ \\alpha , \\beta \\in \\mathbb{Z}")
        properties_list5=TexMobject("5) \\ \\textrm{If}\\ x \\mid y \\","\\textrm{and}\\","x \\mid y\\pm z \\","\\textrm{then}\\","x \\mid z")
        properties_list6=TexMobject("6) \\ \\textrm{If}\\ x \\mid y \\","\\textrm{and}\\","y \\mid x \\","\\textrm{then}\\","|x| = |y|")
        properties_list7=TexMobject("7) \\ \\textrm{If}\\ x \\mid y \\","\\textrm{and}\\","y \\neq 0 \\","\\textrm{then}\\","\\frac{y}{x} \\mid y")

        properties_list=VGroup(properties_list1, properties_list2, properties_list3, properties_list4, properties_list5,
                        properties_list6, properties_list7)
        properties_list.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        properties_list.scale(0.8)
        properties_list.to_edge(LEFT+TOP*0.7)
        properties_list1_top = properties_list1.copy()
        properties_list1_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_1 = TexMobject("\\frac{x}{x}=1 \\Longrightarrow x|x")
        exmp_prop_1.scale(0.8)
        exmp_prop_1.move_to([0, -1, 0])
        properties_list2_top = properties_list2.copy()
        properties_list2_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_21 = TexMobject("x|y \\ \\textrm{and} \\ y|z")
        exmp_prop_22 = TexMobject("\\Longrightarrow \\frac{y}{x}=a \\ \\textrm{and} \\ \\frac{z}{y}=b")
        exmp_prop_23 = TexMobject("\\Longrightarrow \\frac{y}{x} \\times  \\frac{z}{y}=ab")
        exmp_prop_24 = TexMobject("\\Longrightarrow \\frac{z}{x}=ab \\Longrightarrow x|z")
        exmp_prop_2=VGroup(exmp_prop_21,exmp_prop_22,exmp_prop_23,exmp_prop_24)
        exmp_prop_2.scale(0.8)
        exmp_prop_2.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_2.move_to([0,-1,0])
        properties_list3_top = properties_list3.copy()
        properties_list3_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_31 = TexMobject("\\frac{y}{x}=z \\in \\mathbb{Z}")
        exmp_prop_32 = TexMobject("\\Longrightarrow \\frac{|y|}{|x|}=|z|=n \\in \\mathbb{N} \\ \\textrm{if} \\ z \\neq 0")
        exmp_prop_33 = TexMobject("\\Longrightarrow  |y|=|x| \\times n \\"," \\because n \\geq 1 \\Longrightarrow |x| \\leq |y|")
        exmp_prop_3= VGroup(exmp_prop_31, exmp_prop_32, exmp_prop_33)
        exmp_prop_3.scale(0.8)
        exmp_prop_3.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_3.move_to([0, -1, 0])
        properties_list4_top = properties_list4.copy()
        properties_list4_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_41=TexMobject("x|y \\ \\textrm{and} \\ x|z ","\\Longrightarrow \\frac{y}{x}=a \\ \\textrm{and} \\ \\frac{z}{x}=b")
        exmp_prop_42=TexMobject("\\frac{\\alpha y + \\beta z}{x}=", "\\frac{\\alpha y}{x}+ \\frac{\\beta z}{x}=a \\alpha +b \\beta")
        exmp_prop_43= TexMobject(" \\Longrightarrow x| \\alpha y +\\beta z")
        exmp_prop_4=VGroup(exmp_prop_41,exmp_prop_42,exmp_prop_43)
        exmp_prop_4.scale(0.8)
        exmp_prop_4.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_4.move_to([0, -1, 0])
        properties_list5_top = properties_list5.copy()
        properties_list5_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_51=TexMobject("x|y \\ \\textrm{and} \\ x| y \\pm z")
        exmp_prop_52=TexMobject("\\Longrightarrow \\frac{y \\pm z}{x}=","a \\in \\mathbb{Z}")
        exmp_prop_53=TexMobject("\\Longrightarrow a_0 \\pm \\frac{z}{x}=a \\Longrightarrow \\frac{z}{x}=\\pm (a-a_0)")
        exmp_prop_54=TexMobject("\\Longrightarrow x|z")
        exmp_prop_5=VGroup(exmp_prop_51,exmp_prop_52,exmp_prop_53,exmp_prop_54)
        exmp_prop_5.scale(0.8)
        exmp_prop_5.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_5.move_to([0, -1, 0])
        properties_list6_top = properties_list6.copy()
        properties_list6_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_61=TexMobject("x|y \\Longrightarrow |x| \\leq |y| \\ \\textrm{and} \\ y|x \\Longrightarrow |y| \\leq |x|")
        exmp_prop_62=TexMobject("\\Longrightarrow |x|=|y|")
        exmp_prop_6=VGroup( exmp_prop_61,  exmp_prop_62)
        exmp_prop_6.scale(0.8)
        exmp_prop_6.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_6.move_to([0, -1, 0])
        properties_list7_top = properties_list7.copy()
        properties_list7_top.to_edge(LEFT + TOP * 0.7)
        exmp_prop_71=TexMobject("x|y \\Longrightarrow y=xa")
        exmp_prop_72=TexMobject("\\Longrightarrow \\frac{y}{x}=a")
        exmp_prop_73=TexMobject("\\Longrightarrow \\frac{xa}{a}=x \\Longrightarrow a|y")
        exmp_prop_74=TexMobject("\\Longrightarrow \\frac{y}{x}|y")
        exmp_prop_7=VGroup(exmp_prop_71,exmp_prop_72,exmp_prop_73, exmp_prop_74)
        exmp_prop_7.scale(0.8)
        exmp_prop_7.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        exmp_prop_7.move_to([0, -1, 0])

        self.play(Write(properties))
        self.play(LaggedStartMap(
            FadeInFrom, properties_list, run_time=4,
        ))
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list1, properties_list1_top), replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_1))
        self.wait()
        self.play(FadeOut(exmp_prop_1), Transform(properties_list1_top,properties_list1), FadeIn(properties_list),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list2.copy(), properties_list2_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_21))
        self.wait()
        self.play(Write(exmp_prop_22))
        self.wait()
        self.play(Write(exmp_prop_23))
        self.wait()
        self.play(Write(exmp_prop_24))
        self.wait()
        self.play(FadeOut(exmp_prop_2), Transform(properties_list2_top, properties_list2), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list3.copy(), properties_list3_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_31))
        self.wait()
        self.play(Write(exmp_prop_32))
        self.wait()
        self.play(Write(exmp_prop_33[0]))
        self.wait()
        self.play(Write(exmp_prop_33[1]))
        self.wait()
        self.play(FadeOut(exmp_prop_3), Transform(properties_list3_top, properties_list3), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list4.copy(), properties_list4_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_41[0]))
        self.wait()
        self.play(Write(exmp_prop_41[1]))
        self.wait()
        self.play(Write(exmp_prop_42))
        self.wait()
        self.play(Write(exmp_prop_43))
        self.wait()
        self.play(FadeOut(exmp_prop_4), Transform(properties_list4_top, properties_list4), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list5.copy(), properties_list5_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_51))
        self.wait()
        self.play(Write(exmp_prop_52))
        self.wait()
        self.play(Write(exmp_prop_53))
        self.wait()
        self.play(Write(exmp_prop_54))
        self.wait()
        self.play(FadeOut(exmp_prop_5), Transform(properties_list5_top, properties_list5), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list6.copy(), properties_list6_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_61))
        self.wait()
        self.play(Write(exmp_prop_62))
        self.wait()
        self.play(FadeOut(exmp_prop_6), Transform(properties_list6_top, properties_list6), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(properties_list), Transform(properties_list7.copy(), properties_list7_top),replace_mobject_with_target_in_scene= True)
        self.wait()
        self.play(Write(exmp_prop_71))
        self.wait()
        self.play(Write(exmp_prop_72))
        self.wait()
        self.play(Write(exmp_prop_73))
        self.wait()
        self.play(Write(exmp_prop_74))
        self.wait()
        self.play(FadeOut(exmp_prop_7), Transform(properties_list7_top, properties_list7), FadeIn(properties_list),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
class problems(Scene):
    def construct(self):
        problem_title= TextMobject("Problems")
        problem_title.set_color(DARK_BLUE)
        problem_title.move_to(TOP*.8)
        p1=TexMobject("1)\\ \\textrm{Find all positive integers}\\ d \\ \\textrm{such that it divides}\\ n+4\\ \\textrm{and} \\ n+2014 \\\ \\textrm{for some positive integer} \\ n")
        p2=TexMobject("2)\\ \\textrm{Find all}\\ n \\in \\mathbb{N} \\ \\textrm{such that} \\ n+2|5n+6")
        p3=TexMobject("3)\\ \\textrm{Prove that the fraction} \\"," \\frac{21n+4}{14n+3} \\ ","\\textrm{is irreducible}-\\textrm{(IMO-1959, P1)}")
        p4=TexMobject("4)\\ \\textrm{Find all}","\\ n \\in \\mathbb{N}_0","\\ \\textrm{such that} \\ 2^n +n|8^n +n")
        prob=VGroup(p1,p2,p3,p4)
        prob.scale(0.8)
        prob.to_edge(LEFT+TOP*0.7)
        prob.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p1_top = p1.copy()
        p1_top.to_edge(LEFT + TOP * 0.7)
        p1s1=TexMobject("d|","n","+4 \\ \\textrm{and} \\ d|","n","+2014")
        p1s2=TexMobject("\\Longrightarrow d|n+2014-n-4")
        p1s3=TexMobject("\\Longrightarrow d|2010")
        p1s4=TexMobject("\\Longrightarrow d=1,2,3,5,6,10,15,30,67,134,201,335,402,670,1005,2010")
        p1s=VGroup(p1s1,p1s2,p1s3,p1s4)
        p1s.scale(0.8)
        p1s.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p1s.move_to([0, -0.5, 0])
        p2_top=p2.copy()
        p2_top.to_edge(LEFT + TOP * 0.7)
        p2s1=TexMobject("n+2|5n+6 \\dots \\dots (i)")
        p2s2=TexMobject("n+2|n+2 \\dots \\dots (ii)")
        p2s3=TexMobject("n+2|5(n+2)-5n-6")
        p2s4=TexMobject("\\Longrightarrow n+2|4")
        p2s5=TexMobject("\\because n \\in \\mathbb{N}", "\\Longrightarrow n+2 \\geq 3")
        p2s6=TexMobject("\\Longrightarrow n+2=4","\\Longrightarrow n=2")
        p2s=VGroup(p2s1,p2s2,p2s3,p2s4,p2s5,p2s6)
        p2s.scale(0.7)
        p2s.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p2s.move_to([0, -0.5, 0])
        p3_top = p3.copy()
        p3_top.to_edge(LEFT + TOP * 0.7)
        p3s11 = TexMobject("(21n+4, 14n+3)=1")
        p3s11.scale(0.7)
        p3s1 = TexMobject("(21n+4, 14n+3)=g")
        p3s2 = TexMobject("\\Longrightarrow g|","21n","+4 \\ \\textrm{and} \\ g|","14n","+3")
        p3s3 = TexMobject("\\Longrightarrow g|3(14n+3)-2(21n+4)")
        p3s4 = TexMobject("\\Longrightarrow g|42n+9-42n-8")
        p3s5 = TexMobject("\\Longrightarrow g|1"," \\Longrightarrow g=1")
        p3s=VGroup(p3s1,p3s2,p3s3,p3s4,p3s5)
        p3s.scale(0.7)
        p3s.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p3s.move_to([0, -0.5, 0])
        p4_top = p4.copy()
        p4_top.to_edge(LEFT + TOP * 0.7)
        p4s11 = TexMobject("2^n +n|8^n +n")
        p4s12 = TexMobject("2^n +n|8^n +n^3")
        p4s13 = TexMobject("\\Longrightarrow 2^n +n|8^n +n^3-8^n-n")
        p4s14 = TexMobject("\\Longrightarrow 2^n +n|n^3-n")
        p4s12e1 = TexMobject("a^3 +b^3 =(a+b)(a^2 -ab +b^2)")
        p4s12e2 = TexMobject("(a+b)|a^3 +b^3")
        p4s1 = VGroup(p4s11, p4s12, p4s13, p4s14)
        p4s1.scale(0.7)
        p4s1.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s1.move_to([-4, -0.5, 0])
        p4s12e=VGroup(p4s12e1,p4s12e2)
        p4s12e.scale(0.7)
        p4s12e.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s12e.move_to([4, -0.5, 0])
        p4s21 = p4s14.copy()
        p4s21.scale(1.42)
        p4s22 = TexMobject("2^n +n > n^3 -n")
        p4s23 = TexMobject("2^{10} +10 = 1034", ">","10^3 -10=990")
        p4s24 = TexMobject("\\textrm{for} \\ n>9; \\","2^n +n > n^3 -n ","???")
        p4s2= VGroup(p4s21, p4s22, p4s23, p4s24)
        p4s2.scale(0.7)
        p4s2.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s2.move_to([0, -0.5, 0])
        p4s31 = TexMobject("\\textrm{base case} \\ n_0=10;", "n=k \\ \\textrm{for some} \\ k \\in \\mathbb{N}, k>10")
        p4s32 = TexMobject(" 2^k +k",">","k^3-k")
        p4s33 = TexMobject("\\textrm{for} \\ n=k+1", "\\Longrightarrow 2^{(k+1)} +(k+1) \\\=2.2^k+k+1")
        p4s34 = TexMobject("\\Longrightarrow 2(2^k+k)-k+1 > 2(k^3 -k)-k+1 \\\ =2k^3-3k+1")
        p4s35 = TexMobject("\\Longrightarrow 2^{(k+1)} +(k+1)>", "2k^3-3k+1")
        p4s3 = VGroup(p4s31,p4s32,p4s33,p4s34,p4s35)
        p4s3.scale(0.7)
        p4s3.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s3.move_to([-3, -0.5, 0])
        p4s3e1 = TexMobject("\\textrm{for} \\ n=k+1;", "\\Longrightarrow (k+1)^3-(k+1)")
        p4s3e2 = TexMobject("= k^3+3k^2 +3k+1-k-1")
        p4s3e3 = TexMobject("= k^3+3k^2 +2k")
        p4s3e4 = TexMobject("2k^3-3k+1", "> k^3+3k^2 +2k")
        p4s3e= VGroup(p4s3e1, p4s3e2, p4s3e3, p4s3e4)
        p4s3e.scale(0.7)
        p4s3e.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s3e.move_to([3.5, -0.5, 0])
        p4s41= p4s3e4.copy()
        p4s41.scale(1.42)
        p4s42 = TexMobject("\\Longrightarrow k^3+1>3k^2+5k")
        p4s43 = TexMobject("\\Longrightarrow k^3+1>k^3 \\geq 3k^2+5k","\\Longrightarrow k^2 \\geq 3k+5")
        p4s44 = TexMobject("\\because k >10; \\ k^2>10k>3k+5 \\Longrightarrow 2^n+n>n^3-n \\ \\textrm{for} \\ n>9")
        p4s45 = TexMobject("\\Longrightarrow n \\in {0,1,2,4,6}")
        p4s4=VGroup(p4s41,p4s42,p4s43,p4s44,p4s45)
        p4s4.scale(0.7)
        p4s4.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        p4s4.move_to([0, -0.5, 0])
        x=p4s35[1].copy()
        self.play(Write(problem_title))
        self.wait()
        self.play(LaggedStartMap(
            FadeInFrom, prob, run_time=4,
        ))
        self.play(FadeOutAndShift(prob), Transform(p1.copy(), p1_top),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Write(p1s1))
        self.wait()
        self.play(Indicate(p1s1[1]), Indicate(p1s1[3]))
        self.wait()
        self.play(Write(p1s2))
        self.wait()
        self.play(Write(p1s3))
        self.wait()
        self.play(Write(p1s4))
        self.wait()
        self.play(FadeOut(p1s), Transform(p1_top, p1), FadeIn(prob),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(prob), Transform(p2.copy(), p2_top),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Write(p2s1))
        self.wait()
        self.play(Write(p2s2))
        self.wait()
        self.play(Write(p2s3))
        self.wait()
        self.play(Write(p2s4))
        self.wait()
        self.play(Write(p2s5[0]))
        self.wait()
        self.play(Write(p2s5[1]))
        self.wait()
        self.play(Write(p2s6[0]))
        self.wait()
        self.play(Write(p2s6[1]))
        self.wait()
        self.play(FadeOut(p2s), Transform(p2_top, p2), FadeIn(prob),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(prob), Transform(p3.copy(), p3_top),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Indicate(p3_top[1]))
        self.wait()
        self.play(Write(p3s11))
        self.wait()
        self.play(Transform(p3s11, p3s1))
        self.wait()
        self.play(Write(p3s2))
        self.wait()
        self.play(Indicate(p3s2[1]), Indicate(p3s2[3]))
        self.wait()
        self.play(Write(p3s3))
        self.wait()
        self.play(Write(p3s4))
        self.wait()
        self.play(Write(p3s5[0]))
        self.wait()
        self.play(Write(p3s5[1]))
        self.wait()
        self.play(FadeOut(p3s), FadeOut(p3s11), Transform(p3_top, p3), FadeIn(prob),
                  replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(FadeOutAndShift(prob), Transform(p4.copy(), p4_top),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Write(p4s11))
        self.wait()
        self.play(Write(p4s12e1))
        self.wait()
        self.play(Write(p4s12e2))
        self.wait()
        self.play(Write(p4s12))
        self.wait()
        self.play(Write(p4s13))
        self.wait()
        self.play(Write(p4s14))
        self.wait()
        self.play(FadeOut(p4s1), FadeOut(p4s12e), Transform(p4s14, p4s21),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Indicate(p4_top[1]))
        self.wait()
        self.play(Write(p4s22))
        self.wait()
        self.play(Write(p4s23[0]))
        self.wait()
        self.play(Write(p4s23[2]))
        self.wait()
        self.play(Write(p4s23[1]))
        self.wait()
        self.play(Write(p4s24))
        self.wait()
        self.play(Indicate(p4s24[1]))
        self.wait()
        self.play(FadeOut(p4s2))
        self.wait()
        self.play(Write(p4s31[0]))
        self.wait()
        self.play(Write(p4s31[1]))
        self.wait()
        self.play(Write(p4s32))
        self.wait()
        self.play(Write(p4s33[0]))
        self.wait()
        self.play(Indicate(p4s32[0]))
        self.wait()
        self.play(Write(p4s33[1]))
        self.wait()
        self.play(Write(p4s34))
        self.wait()
        self.play(Write(p4s35))
        self.wait()
        self.play(Write(p4s3e1[0]))
        self.wait()
        self.play(Indicate(p4s32[2]))
        self.wait()
        self.play(Write(p4s3e1[1]))
        self.wait()
        self.play(Write(p4s3e2))
        self.wait()
        self.play(Write(p4s3e3))
        self.wait()
        self.play(Transform(x, p4s3e4[0]))
        self.wait()
        self.play(Write(p4s3e4[1]))
        self.wait()
        self.play(FadeOut(p4s3), FadeOut(p4s3e),FadeOut(x), Transform(p4s3e4, p4s41),replace_mobject_with_target_in_scene=True)
        self.wait()
        self.play(Write(p4s42))
        self.wait()
        self.play(Write(p4s43))
        self.wait()
        self.play(Write(p4s44))
        self.wait()
        self.play(Write(p4s45))
        self.wait()
class exercise(Scene):
    def construct(self):
        exercise_title=TextMobject("Exercise")
        exercise_title.set_color(DARK_BLUE)
        exercise_title.move_to(TOP*.8)
        problem_1=TexMobject("1) \\ \\textrm{Find all} \\ n \\ \\textrm{that satisfies the relation} \\ 7n+1|8n+55")
        problem_2=TexMobject("2) \\ \\textrm{Find the maximum value of} \\ n \\ \\textrm{such that} \\ n+25|(n+2)^2")
        problem_3=TexMobject("3) \\ \\textrm{Show that} \\ 2^{32}+1 \\ \\textrm{is divisible by} \\ 641")
        problem_4=TexMobject("4) \\ \\textrm{Prove that} \\ n^4+4^n \\ \\textrm{is always composite for} \\ n \\in \\mathbb{N} \\\ - \\textrm{IMO - 1964, P1}")
        problem_5=TexMobject("5) \\ \\textrm{If} \\ \\frac{a+1}{b}+\\frac{b+1}{a} \\ \\textrm{is a positive integer, then} \\ a+b \\geq (gcd(a,b))^2 \\\ - \\textrm{Spanish Mathematical Olympiad-1996}")
        problems=VGroup(problem_1, problem_2, problem_3, problem_4, problem_5)
        problems.scale(0.7)
        problems.to_edge(LEFT+TOP*0.7)
        problems.arrange(BOTTOM, buff=SMALL_BUFF, aligned_edge=LEFT)
        subs=TextMobject("If you like this video please consider", "subscribing", "and", "sharing")
        subs[1].set_color(RED)
        subs[3].set_color(RED)
        self.play(Write(exercise_title))
        self.wait()
        self.play(LaggedStartMap(
            FadeInFrom, problems, run_time=4,
        ))
        self.wait()
        self.play(FadeOut(exercise_title),FadeOutAndShift(problems), Write(subs))
        self.wait()